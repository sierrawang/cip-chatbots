
// Dictionary of the lessonIds to their index 
// Represents the order of the lessons in the course
interface LessonOutline {
    [key: string]: number;
}
export const LESSON_OUTLINE: LessonOutline = {
    "animation": 10,
    "control-flow": 2,
    "decomposition": 3,
    "dictionaries": 12,
    "expressions": 5,
    "functions": 8,
    "graphics": 7,
    "information-flow": 9,
    "introduction-to-python": 4,
    "lists": 11,
    "python-control-flow": 6,
    "welcome-to-karel": 1,
}

// List of the course materials
// Each material is identified by its title, lessonId, docId, tags (main concept), and type
export const MATERIALS_LOOKUP_TABLE = [
    { "title": "Animated Square", "lessonId": "animation", "docId": "video-10.1", "tags": "animation", "type": "lecture video" },
    { "title": "Bouncing Ball", "lessonId": "animation", "docId": "video-10.2", "tags": "animation", "type": "lecture video" },
    { "title": "Graphics Functions", "lessonId": "animation", "docId": "video-10.3", "tags": "graphics", "type": "lecture video" },
    { "title": "Mouse Tracker", "lessonId": "animation", "docId": "video-10.4", "tags": "graphics", "type": "lecture video" },
    { "title": "Karel Recap", "lessonId": "control-flow", "docId": "karel-recap", "tags": "karel programming", "type": "lecture video" },
    { "title": "For Loops", "lessonId": "control-flow", "docId": "for-loops", "tags": "for loops", "type": "lecture video" },
    { "title": "While Loops", "lessonId": "control-flow", "docId": "while-loops", "tags": "while loops", "type": "lecture video" },
    { "title": "If Statements", "lessonId": "control-flow", "docId": "if-statements", "tags": "if/else", "type": "lecture video" },
    { "title": "Steeple Chase", "lessonId": "control-flow", "docId": "steeple-chase-video", "tags": "karel programming", "type": "lecture video" },
    { "title": "Intro to Decomp", "lessonId": "decomposition", "docId": "lecture-3-video-intro", "tags": "decomposition", "type": "lecture video" },
    { "title": "Morning Routine", "lessonId": "decomposition", "docId": "lecture-3-morning-video", "tags": "decomposition", "type": "lecture video" },
    { "title": "Mountain Karel", "lessonId": "decomposition", "docId": "lecture-3-mountain-video", "tags": "decomposition", "type": "lecture video" },
    { "title": "Rhoomba Karel", "lessonId": "decomposition", "docId": "lecture-3-rhoomba-video", "tags": "decomposition", "type": "lecture video" },
    { "title": "Word Search", "lessonId": "decomposition", "docId": "lecture-3-wordsearch-video", "tags": "karel programming", "type": "lecture video" },
    { "title": "Intro to Dictionaries", "lessonId": "dictionaries", "docId": "video-12.1", "tags": "dictionaries", "type": "lecture video" },
    { "title": "Adding to Dictionaries", "lessonId": "dictionaries", "docId": "video-12.2", "tags": "dictionaries", "type": "lecture video" },
    { "title": "Looping over Dictionaries", "lessonId": "dictionaries", "docId": "video-12.3", "tags": "dictionaries", "type": "lecture video" },
    { "title": "Lists vs Dictionaries", "lessonId": "dictionaries", "docId": "video-12.4", "tags": "dictionaries", "type": "lecture video" },
    { "title": "More Fun with Dictionaries", "lessonId": "dictionaries", "docId": "video-12.5", "tags": "dictionaries", "type": "lecture video" },
    { "title": "Count Nums", "lessonId": "dictionaries", "docId": "video-12.6", "tags": "dictionaries", "type": "lecture video" },
    { "title": "Phonebook", "lessonId": "dictionaries", "docId": "video-12.7", "tags": "dictionaries", "type": "lecture video" },
    { "title": "Lesson Intro", "lessonId": "expressions", "docId": "video-5.1", "tags": "expressions", "type": "lecture video" },
    { "title": "Expressions", "lessonId": "expressions", "docId": "video-5.2", "tags": "expressions", "type": "lecture video" },
    { "title": "Constants", "lessonId": "expressions", "docId": "video-5.3", "tags": "constants", "type": "lecture video" },
    { "title": "Math Library", "lessonId": "expressions", "docId": "video-5.4", "tags": "math", "type": "lecture video" },
    { "title": "Random Numbers", "lessonId": "expressions", "docId": "video-5.5", "tags": "random", "type": "lecture video" },
    { "title": "Dice Simulator", "lessonId": "expressions", "docId": "video-5.6", "tags": "scope", "type": "lecture video" },
    { "title": "Toasters", "lessonId": "functions", "docId": "video-8.1", "tags": "functions", "type": "lecture video" },
    { "title": "Draw Circle", "lessonId": "functions", "docId": "video-8.2", "tags": "functions", "type": "lecture video" },
    { "title": "Georgia Flag", "lessonId": "functions", "docId": "video-8.3", "tags": "functions", "type": "lecture video" },
    { "title": "Is Odd", "lessonId": "functions", "docId": "video-8.4", "tags": "functions", "type": "lecture video" },
    { "title": "Chessboard", "lessonId": "functions", "docId": "video-8.5", "tags": "for loops", "type": "lecture video" },
    { "title": "Teaser", "lessonId": "graphics", "docId": "video-7.1", "tags": "graphics", "type": "lecture video" },
    { "title": "Programming is Awesome", "lessonId": "graphics", "docId": "video-7.2", "tags": "graphics", "type": "lecture video" },
    { "title": "Centered Square", "lessonId": "graphics", "docId": "video-7.3", "tags": "graphics", "type": "lecture video" },
    { "title": "Rects and Loops", "lessonId": "graphics", "docId": "video-7.4", "tags": "for loops", "type": "lecture video" },
    { "title": "Information Flow", "lessonId": "information-flow", "docId": "video-9", "tags": "parameters", "type": "lecture video" },
    { "title": "Intro to Python", "lessonId": "introduction-to-python", "docId": "video-4.1", "tags": "decomposition", "type": "lecture video" },
    { "title": "Hello, World", "lessonId": "introduction-to-python", "docId": "video-4.2", "tags": "console programming", "type": "lecture video" },
    { "title": "Add Two Numbers", "lessonId": "introduction-to-python", "docId": "video-4.3", "tags": "variables", "type": "lecture video" },
    { "title": "Lists Intro", "lessonId": "lists", "docId": "video-11.1", "tags": "parameters", "type": "lecture video" },
    { "title": "First Lists", "lessonId": "lists", "docId": "video-11.2", "tags": "lists", "type": "lecture video" },
    { "title": "List Operations", "lessonId": "lists", "docId": "video-11.3", "tags": "lists", "type": "lecture video" },
    { "title": "Memory Model", "lessonId": "lists", "docId": "video-11.4", "tags": "variables", "type": "lecture video" },
    { "title": "Tour of Lists", "lessonId": "lists", "docId": "video-11.5", "tags": "lists", "type": "lecture video" },
    { "title": "Canvas Eraser", "lessonId": "lists", "docId": "video-11.6", "tags": "lists", "type": "lecture video" },
    { "title": "Recap", "lessonId": "python-control-flow", "docId": "video-6.1", "tags": "variables", "type": "lecture video" },
    { "title": "While, If", "lessonId": "python-control-flow", "docId": "video-6.2", "tags": "for loops", "type": "lecture video" },
    { "title": "Guess My Number", "lessonId": "python-control-flow", "docId": "video-6.3", "tags": "while loops", "type": "lecture video" },
    { "title": "Booleans", "lessonId": "python-control-flow", "docId": "video-6.5", "tags": "logical operators", "type": "lecture video" },
    { "title": "For Loops", "lessonId": "python-control-flow", "docId": "video-6.6", "tags": "for loops", "type": "lecture video" },
    { "title": "Game Show", "lessonId": "python-control-flow", "docId": "video-6.7", "tags": "while loops", "type": "lecture video" },
    { "title": "Welcome", "lessonId": "welcome-to-karel", "docId": "welcome", "tags": "karel programming", "type": "lecture video" },
    { "title": "About Code in Place", "lessonId": "welcome-to-karel", "docId": "about-code-in-place", "tags": "karel programming", "type": "lecture video" },
    { "title": "Meet Karel", "lessonId": "welcome-to-karel", "docId": "meet-karel", "tags": "karel programming", "type": "lecture video" },
    { "title": "console", "lessonId": "console", "docId": "console", "tags": "console programming", "type": "code documentation" },
    { "title": "graphics", "lessonId": "graphics", "docId": "graphics", "tags": "graphics", "type": "code documentation" },
    { "title": "karel", "lessonId": "karel", "docId": "karel", "tags": "karel programming", "type": "code documentation" },
    { "title": "Animation", "lessonId": "animation", "docId": "animation", "tags": "animation", "type": "python textbook chapter" },
    { "title": "Dictionaries", "lessonId": "dictionaries", "docId": "dictionaries", "tags": "dictionaries", "type": "python textbook chapter" },
    { "title": "Basic Arithmetic", "lessonId": "expressions", "docId": "basic-arithmetic-reading", "tags": "math", "type": "python textbook chapter" },
    { "title": "Random Reading", "lessonId": "expressions", "docId": "random-reading", "tags": "random", "type": "python textbook chapter" },
    { "title": "Advanced Arithmetic", "lessonId": "expressions", "docId": "advanced-arithmetic-reading", "tags": "math", "type": "python textbook chapter" },
    { "title": "Anatomy of a Function", "lessonId": "functions", "docId": "anatomy", "tags": "functions", "type": "python textbook chapter" },
    { "title": "Scope", "lessonId": "functions", "docId": "scope", "tags": "scope", "type": "python textbook chapter" },
    { "title": "Parameters", "lessonId": "functions", "docId": "parameters", "tags": "parameters", "type": "python textbook chapter" },
    { "title": "Graphics Shapes", "lessonId": "graphics", "docId": "shapes", "tags": "graphics", "type": "python textbook chapter" },
    { "title": "Update Function", "lessonId": "information-flow", "docId": "update-functions", "tags": "functions", "type": "python textbook chapter" },
    { "title": "Introduction to Python", "lessonId": "introduction-to-python", "docId": "intro-python-reading", "tags": "functions", "type": "python textbook chapter" },
    { "title": "Print", "lessonId": "introduction-to-python", "docId": "print-reading", "tags": "functions", "type": "python textbook chapter" },
    { "title": "User Input", "lessonId": "introduction-to-python", "docId": "input-reading", "tags": "input", "type": "python textbook chapter" },
    { "title": "Lists", "lessonId": "lists", "docId": "lists", "tags": "lists", "type": "python textbook chapter" },
    { "title": "Conditionals", "lessonId": "python-control-flow", "docId": "conditionals", "tags": "if/else", "type": "python textbook chapter" },
    { "title": "Loops", "lessonId": "python-control-flow", "docId": "loops", "tags": "for loops", "type": "python textbook chapter" },
    { "title": "Moving Square", "lessonId": "animation", "docId": "movingsquare", "tags": "animation", "type": "code example" },
    { "title": "Bouncing Ball", "lessonId": "animation", "docId": "bouncingball", "tags": "animation", "type": "code example" },
    { "title": "Mouse Tracker", "lessonId": "animation", "docId": "mousetracker", "tags": "graphics", "type": "code example" },
    { "title": "Steeple Chase", "lessonId": "control-flow", "docId": "steeple-chase", "tags": "karel programming", "type": "code example" },
    { "title": "Place 10 beepers", "lessonId": "control-flow", "docId": "place10beepers", "tags": "for loops", "type": "code example" },
    { "title": "Move 5", "lessonId": "control-flow", "docId": "move5", "tags": "for loops", "type": "code example" },
    { "title": "Backflip (for loop warmup)", "lessonId": "control-flow", "docId": "backflip", "tags": "for loops", "type": "code example" },
    { "title": "Square (for loop warmup)", "lessonId": "control-flow", "docId": "square", "tags": "for loops", "type": "code example" },
    { "title": "4 in a row (for loop warmup)", "lessonId": "control-flow", "docId": "4inarow", "tags": "fencepost", "type": "code example" },
    { "title": "Move to wall (while loop warmup)", "lessonId": "control-flow", "docId": "movetowall", "tags": "while loops", "type": "code example" },
    { "title": "Clean spot (while loop warmup)", "lessonId": "control-flow", "docId": "cleanspot", "tags": "while loops", "type": "code example" },
    { "title": "Turn to wall (while loop warmup)", "lessonId": "control-flow", "docId": "turntowall", "tags": "while loops", "type": "code example" },
    { "title": "Fill bottom row (while loop warmup)", "lessonId": "control-flow", "docId": "fillbottomrow", "tags": "fencepost", "type": "code example" },
    { "title": "Invert spot (if/else warmup)", "lessonId": "control-flow", "docId": "invertspot", "tags": "karel programming", "type": "code example" },
    { "title": "Move if clear (if/else warmup)", "lessonId": "control-flow", "docId": "moveifclear", "tags": "if/else", "type": "code example" },
    { "title": "Conditional turn (if/else)", "lessonId": "control-flow", "docId": "conditionalturn", "tags": "if/else", "type": "code example" },
    { "title": "Turn signal (if/else)", "lessonId": "control-flow", "docId": "turnsignal", "tags": "karel programming", "type": "code example" },
    { "title": "Three slots (for loops, fencepost)", "lessonId": "control-flow", "docId": "threeslots", "tags": "karel programming", "type": "code example" },
    { "title": "10s across the board (for loops, while loops, fencepost)", "lessonId": "control-flow", "docId": "10sacrosstheboard", "tags": "for loops", "type": "code example" },
    { "title": "Maximum 5 (for loops, if/else)", "lessonId": "control-flow", "docId": "maximum5", "tags": "for loops", "type": "code example" },
    { "title": "Invert (while loops, if/else)", "lessonId": "control-flow", "docId": "invert", "tags": "karel programming", "type": "code example" },
    { "title": "Five corridors (for loops, while loops, fencepost, if/else)", "lessonId": "control-flow", "docId": "fivecorridors", "tags": "karel programming", "type": "code example" },
    { "title": "Mountain Karel", "lessonId": "decomposition", "docId": "mountain-karel", "tags": "karel programming", "type": "code example" },
    { "title": "Rhoomba Karel", "lessonId": "decomposition", "docId": "rhoomba-karel", "tags": "karel programming", "type": "code example" },
    { "title": "Zig zag (while loops, optional if/else)", "lessonId": "decomposition", "docId": "zigzag", "tags": "karel programming", "type": "code example" },
    { "title": "Labyrinth (while loops, if/else, decomposition)", "lessonId": "decomposition", "docId": "labyrinth", "tags": "karel programming", "type": "code example" },
    { "title": "Zebra Crossing Karel", "lessonId": "decomposition", "docId": "zebra", "tags": "karel programming", "type": "code example" },
    { "title": "Count Nums", "lessonId": "dictionaries", "docId": "countnums", "tags": "dictionaries", "type": "code example" },
    { "title": "Phone Book", "lessonId": "dictionaries", "docId": "phonebook", "tags": "dictionaries", "type": "code example" },
    { "title": "Feet To Inches", "lessonId": "expressions", "docId": "feet-to-inches", "tags": "constants", "type": "code example" },
    { "title": "Square Root", "lessonId": "expressions", "docId": "square-root", "tags": "functions", "type": "code example" },
    { "title": "Roll Dice", "lessonId": "expressions", "docId": "roll-dice", "tags": "random", "type": "code example" },
    { "title": "Dice Simulator", "lessonId": "expressions", "docId": "dice-simulator", "tags": "scope", "type": "code example" },
    { "title": "Remainder division", "lessonId": "expressions", "docId": "remainder", "tags": "input", "type": "code example" },
    { "title": "Seconds in a year", "lessonId": "expressions", "docId": "secondsinayear", "tags": "constants", "type": "code example" },
    { "title": "Tiny mad libs", "lessonId": "expressions", "docId": "tinymadlibs", "tags": "input", "type": "code example" },
    { "title": "Dog years", "lessonId": "expressions", "docId": "dogyears", "tags": "casting", "type": "code example" },
    { "title": "E = mc^2", "lessonId": "expressions", "docId": "emc2", "tags": "constants", "type": "code example" },
    { "title": "Pythagorean theorem", "lessonId": "expressions", "docId": "pythagorean", "tags": "math", "type": "code example" },
    { "title": "Weighted coin", "lessonId": "expressions", "docId": "weightedcoin", "tags": "random", "type": "code example" },
    { "title": "Average Function", "lessonId": "functions", "docId": "averages", "tags": "functions", "type": "code example" },
    { "title": "Param Flags", "lessonId": "functions", "docId": "paramflags", "tags": "functions", "type": "code example" },
    { "title": "Is Odd", "lessonId": "functions", "docId": "isodd", "tags": "for loops", "type": "code example" },
    { "title": "Chessboard", "lessonId": "functions", "docId": "chessboard", "tags": "for loops", "type": "code example" },
    { "title": "Ones digit", "lessonId": "functions", "docId": "onesdigit", "tags": "functions", "type": "code example" },
    { "title": "Print divisors", "lessonId": "functions", "docId": "printdivisors", "tags": "functions", "type": "code example" },
    { "title": "Print multiple", "lessonId": "functions", "docId": "printmultiple", "tags": "functions", "type": "code example" },
    { "title": "Sentence generator", "lessonId": "functions", "docId": "sentencegenerator", "tags": "functions", "type": "code example" },
    { "title": "Get name", "lessonId": "functions", "docId": "getname", "tags": "return", "type": "code example" },
    { "title": "Double", "lessonId": "functions", "docId": "double", "tags": "functions", "type": "code example" },
    { "title": "Count even", "lessonId": "functions", "docId": "countifeven", "tags": "input", "type": "code example" },
    { "title": "Chaotic counting", "lessonId": "functions", "docId": "chaoticcounting", "tags": "return", "type": "code example" },
    { "title": "Programming is Awesome", "lessonId": "graphics", "docId": "programmingisawesome", "tags": "graphics", "type": "code example" },
    { "title": "Centered Square", "lessonId": "graphics", "docId": "centeredsquare", "tags": "graphics", "type": "code example" },
    { "title": "Rects and Loops", "lessonId": "graphics", "docId": "rectline", "tags": "for loops", "type": "code example" },
    { "title": "x = change(x)", "lessonId": "information-flow", "docId": "xchangex", "tags": "functions", "type": "code example" },
    { "title": "Hello World", "lessonId": "introduction-to-python", "docId": "hello-world", "tags": "console programming", "type": "code example" },
    { "title": "Add Two Numbers", "lessonId": "introduction-to-python", "docId": "add-two-numbers", "tags": "input", "type": "code example" },
    { "title": "How old are they?", "lessonId": "introduction-to-python", "docId": "howold", "tags": "variables", "type": "code example" },
    { "title": "Agreement bot", "lessonId": "introduction-to-python", "docId": "agreementbot", "tags": "input", "type": "code example" },
    { "title": "Square number", "lessonId": "introduction-to-python", "docId": "squarenum", "tags": "input", "type": "code example" },
    { "title": "Perimeter of a triangle", "lessonId": "introduction-to-python", "docId": "perimeter", "tags": "input", "type": "code example" },
    { "title": "Fahrenheit to Celsius", "lessonId": "introduction-to-python", "docId": "ftoc", "tags": "input", "type": "code example" },
    { "title": "Double List", "lessonId": "lists", "docId": "doublelist", "tags": "for loops", "type": "code example" },
    { "title": "Add Many Numbers", "lessonId": "lists", "docId": "addmanynumbers", "tags": "functions", "type": "code example" },
    { "title": "Erase Canvas", "lessonId": "lists", "docId": "erasecanvas", "tags": "graphics", "type": "code example" },
    { "title": "Get first element", "lessonId": "lists", "docId": "getfirstelem", "tags": "lists", "type": "code example" },
    { "title": "Get last element", "lessonId": "lists", "docId": "getlastelem", "tags": "lists", "type": "code example" },
    { "title": "Shorten", "lessonId": "lists", "docId": "shorten", "tags": "while loops", "type": "code example" },
    { "title": "Get list", "lessonId": "lists", "docId": "getlist", "tags": "input", "type": "code example" },
    { "title": "Count even", "lessonId": "lists", "docId": "counteven", "tags": "input", "type": "code example" },
    { "title": "Where's Karel?", "lessonId": "lists", "docId": "whereskarel", "tags": "lists", "type": "code example" },
    { "title": "Carbon Dating", "lessonId": "python-control-flow", "docId": "carbondating", "tags": "input", "type": "code example" },
    { "title": "Guess My Number", "lessonId": "python-control-flow", "docId": "guess-my-number", "tags": "while loops", "type": "code example" },
    { "title": "Even Numbers", "lessonId": "python-control-flow", "docId": "for-loop-ex", "tags": "for loops", "type": "code example" },
    { "title": "Game Show", "lessonId": "python-control-flow", "docId": "game-show", "tags": "input", "type": "code example" },
    { "title": "Tall enough to ride", "lessonId": "python-control-flow", "docId": "tallenough", "tags": "input", "type": "code example" },
    { "title": "Wholesome machine", "lessonId": "python-control-flow", "docId": "wholesomemachine", "tags": "while loops", "type": "code example" },
    { "title": "Fibonacci", "lessonId": "python-control-flow", "docId": "fibonacci", "tags": "while loops", "type": "code example" },
    { "title": "International voting age", "lessonId": "python-control-flow", "docId": "votingage", "tags": "if/else", "type": "code example" },
    { "title": "Leap year", "lessonId": "python-control-flow", "docId": "leapyear", "tags": "if/else", "type": "code example" },
    { "title": "First person Karel", "lessonId": "python-control-flow", "docId": "firstpersonkarel", "tags": "karel programming", "type": "code example" },
    { "title": "Step Up", "lessonId": "welcome-to-karel", "docId": "step-up", "tags": "karel programming", "type": "code example" },
    { "title": "Move Beeper", "lessonId": "welcome-to-karel", "docId": "movebeeper", "tags": "decomposition", "type": "code example" },
    { "title": "Obstacles", "lessonId": "welcome-to-karel", "docId": "obstacles", "tags": "karel programming", "type": "code example" },
    { "title": "Archway", "lessonId": "welcome-to-karel", "docId": "archway", "tags": "karel programming", "type": "code example" },
    { "title": "Collect Newspaper", "lessonId": "welcome-to-karel", "docId": "collectnewspaper", "tags": "karel programming", "type": "code example" },
    { "title": "Rainbow", "lessonId": "welcome-to-karel", "docId": "rainbow", "tags": "karel programming", "type": "code example" },
    { "title": "Warmup", "lessonId": "warmup", "docId": "warmup", "tags": "karel programming", "type": "assignment" },
    { "title": "Karel's Home", "lessonId": "housekarel", "docId": "housekarel", "tags": "karel programming", "type": "assignment" },
    { "title": "2024 Karel", "lessonId": "2023", "docId": "2023", "tags": "for loops", "type": "assignment" },
    { "title": "Piles", "lessonId": "piles", "docId": "piles", "tags": "karel programming", "type": "assignment" },
    { "title": "FizzBuzz", "lessonId": "fizzbuzz", "docId": "fizzbuzz", "tags": "functions", "type": "assignment" },
    { "title": "Baby Snake", "lessonId": "babysnake", "docId": "babysnake", "tags": "animation", "type": "assignment" },
    { "title": "Follow Me", "lessonId": "followme", "docId": "followme", "tags": "animation", "type": "assignment" },
    { "title": "Beeper Path", "lessonId": "beeper-path", "docId": "beeper-path", "tags": "while loops", "type": "assignment" },
    { "title": "Stone Mason Karel", "lessonId": "stonemason", "docId": "stonemason", "tags": "for loops", "type": "assignment" },
    { "title": "Fill Karel", "lessonId": "fillkarel", "docId": "fillkarel", "tags": "karel programming", "type": "assignment" },
    { "title": "Optional Challenge: Midpoint Karel", "lessonId": "midpoint", "docId": "midpoint", "tags": "karel programming", "type": "assignment" },
    { "title": "Compute Average", "lessonId": "compute-average", "docId": "compute-average", "tags": "lists", "type": "assignment" },
    { "title": "Memory Game", "lessonId": "memory-game", "docId": "memory-game", "tags": "lists", "type": "assignment" },
    { "title": "Quizzlet", "lessonId": "quizzlet", "docId": "quizzlet", "tags": "dictionaries", "type": "assignment" },
    { "title": "Baby Vocab", "lessonId": "baby-vocab", "docId": "baby-vocab", "tags": "dictionaries", "type": "assignment" },
    { "title": "Optional: Breakout", "lessonId": "breakout", "docId": "breakout", "tags": "animation", "type": "assignment" },
    { "title": "Mad Libs", "lessonId": "madlibs", "docId": "madlibs", "tags": "constants", "type": "assignment" },
    { "title": "Hello, Name", "lessonId": "helloname", "docId": "helloname", "tags": "input", "type": "assignment" },
    { "title": "Multiply Two Numbers", "lessonId": "multiply2nums", "docId": "multiply2nums", "tags": "input", "type": "assignment" },
    { "title": "Dog Years", "lessonId": "dogyears", "docId": "dogyears", "tags": "input", "type": "assignment" },
    { "title": "N-Sided Dice", "lessonId": "nsideddice", "docId": "nsideddice", "tags": "random", "type": "assignment" },
    { "title": "Joke Bot", "lessonId": "jokebot", "docId": "jokebot", "tags": "if/else", "type": "assignment" },
    { "title": "10 Random", "lessonId": "10random", "docId": "10random", "tags": "random", "type": "assignment" },
    { "title": "Liftoff", "lessonId": "liftoff", "docId": "liftoff", "tags": "for loops", "type": "assignment" },
    { "title": "Double It", "lessonId": "doubleit", "docId": "doubleit", "tags": "while loops", "type": "assignment" },
    { "title": "Khansole Academy", "lessonId": "khansole", "docId": "khansole", "tags": "random", "type": "assignment" },
    { "title": "Optional Challenge: Game of Nimm", "lessonId": "gameofnimm", "docId": "gameofnimm", "tags": "while loops", "type": "assignment" },
    { "title": "Draw Flag", "lessonId": "flag", "docId": "flag", "tags": "graphics", "type": "assignment" },
    { "title": "Ring", "lessonId": "ringring", "docId": "ringring", "tags": "constants", "type": "assignment" },
    { "title": "Box Row", "lessonId": "boxrow", "docId": "boxrow", "tags": "for loops", "type": "assignment" },
    { "title": "Optional Challenge: Pyramid", "lessonId": "pyramid", "docId": "pyramid", "tags": "constants", "type": "assignment" },
    { "title": "Quilt", "lessonId": "quilt", "docId": "quilt", "tags": "functions", "type": "assignment" },
    { "title": "Intro to Karel", "lessonId": "welcome-to-karel", "docId": "intro-to-karel", "tags": "karel programming", "type": "karel textbook chapter" },
    { "title": "Programming Karel", "lessonId": "welcome-to-karel", "docId": "programing-karel", "tags": "karel programming", "type": "karel textbook chapter" },
    { "title": "New Functions", "lessonId": "welcome-to-karel", "docId": "new-functions", "tags": "functions", "type": "karel textbook chapter" },
    { "title": "Decomposition", "lessonId": "welcome-to-karel", "docId": "decomposition", "tags": "functions", "type": "karel textbook chapter" },
    { "title": "For Loops", "lessonId": "control-flow", "docId": "karel-reading-for-loops", "tags": "for loops", "type": "karel textbook chapter" },
    { "title": "While Loops", "lessonId": "control-flow", "docId": "karel-reading-while-loops", "tags": "while loops", "type": "karel textbook chapter" },
    { "title": "Conditionals", "lessonId": "control-flow", "docId": "karel-reading-conditionals", "tags": "if/else", "type": "karel textbook chapter" },
    { "title": "Stepwise Refinement", "lessonId": "decomposition", "docId": "karel-reading-refinement", "tags": "decomposition", "type": "karel textbook chapter" },
]
